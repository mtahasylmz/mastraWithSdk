"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/hooks/useMessageStream.ts":
/*!***************************************!*\
  !*** ./src/hooks/useMessageStream.ts ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useMessageStream: () => (/* binding */ useMessageStream)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/../../../../.nvm/versions/node/v22.14.0/lib/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_mastraClient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/mastraClient */ \"(app-pages-browser)/./src/lib/mastraClient.ts\");\n/* harmony import */ var _lib_mastra_config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/mastra-config */ \"(app-pages-browser)/./src/lib/mastra-config.ts\");\n\n\n\nconst useMessageStream = ()=>{\n    const [isStreaming, setIsStreaming] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [streamingMessage, setStreamingMessage] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const clearStreamingMessage = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useMessageStream.useCallback[clearStreamingMessage]\": ()=>{\n            setStreamingMessage(null);\n            setIsStreaming(false);\n        }\n    }[\"useMessageStream.useCallback[clearStreamingMessage]\"], []);\n    // Helper function to save message to memory\n    const saveMessageToMemory = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useMessageStream.useCallback[saveMessageToMemory]\": async (message)=>{\n            try {\n                console.log('💾 Saving message to memory:', message);\n                const result = await _lib_mastraClient__WEBPACK_IMPORTED_MODULE_1__.mastra_sdk.saveMessageToMemory({\n                    messages: [\n                        message\n                    ],\n                    agentId: _lib_mastra_config__WEBPACK_IMPORTED_MODULE_2__.MASTRA_CONFIG.agentId\n                });\n                console.log('✅ Message saved to memory:', result);\n                return result;\n            } catch (err) {\n                console.error('❌ Failed to save message to memory:', err);\n                throw err;\n            }\n        }\n    }[\"useMessageStream.useCallback[saveMessageToMemory]\"], []);\n    const sendMessage = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useMessageStream.useCallback[sendMessage]\": async (message, threadId, onComplete)=>{\n            try {\n                setError(null);\n                setIsStreaming(true);\n                // Create initial assistant message for streaming\n                const assistantMessage = {\n                    id: \"streaming_\".concat(Date.now()),\n                    role: 'assistant',\n                    content: '',\n                    isStreaming: true,\n                    parts: []\n                };\n                setStreamingMessage(assistantMessage);\n                // Get agent instance and start streaming\n                const agent = _lib_mastraClient__WEBPACK_IMPORTED_MODULE_1__.mastra_sdk.getAgent(_lib_mastra_config__WEBPACK_IMPORTED_MODULE_2__.MASTRA_CONFIG.agentId);\n                const response = await agent.stream({\n                    messages: [\n                        message\n                    ],\n                    resourceId: _lib_mastra_config__WEBPACK_IMPORTED_MODULE_2__.MASTRA_CONFIG.resourceId,\n                    threadId: threadId\n                });\n                // Process the stream\n                await response.processDataStream({\n                    onTextPart: {\n                        \"useMessageStream.useCallback[sendMessage]\": (text)=>{\n                            setStreamingMessage({\n                                \"useMessageStream.useCallback[sendMessage]\": (prev)=>{\n                                    if (!prev) return null;\n                                    return {\n                                        ...prev,\n                                        content: prev.content + text,\n                                        parts: [\n                                            ...prev.parts || [],\n                                            {\n                                                type: 'text',\n                                                text\n                                            }\n                                        ]\n                                    };\n                                }\n                            }[\"useMessageStream.useCallback[sendMessage]\"]);\n                        }\n                    }[\"useMessageStream.useCallback[sendMessage]\"],\n                    onReasoningPart: {\n                        \"useMessageStream.useCallback[sendMessage]\": (reasoning)=>{\n                            setStreamingMessage({\n                                \"useMessageStream.useCallback[sendMessage]\": (prev)=>{\n                                    if (!prev) return null;\n                                    return {\n                                        ...prev,\n                                        parts: [\n                                            ...prev.parts || [],\n                                            {\n                                                type: 'reasoning',\n                                                reasoning\n                                            }\n                                        ]\n                                    };\n                                }\n                            }[\"useMessageStream.useCallback[sendMessage]\"]);\n                        }\n                    }[\"useMessageStream.useCallback[sendMessage]\"],\n                    onToolCallPart: {\n                        \"useMessageStream.useCallback[sendMessage]\": (toolCall)=>{\n                            setStreamingMessage({\n                                \"useMessageStream.useCallback[sendMessage]\": (prev)=>{\n                                    if (!prev) return null;\n                                    return {\n                                        ...prev,\n                                        parts: [\n                                            ...prev.parts || [],\n                                            {\n                                                type: 'tool-invocation',\n                                                toolInvocation: toolCall\n                                            }\n                                        ]\n                                    };\n                                }\n                            }[\"useMessageStream.useCallback[sendMessage]\"]);\n                        }\n                    }[\"useMessageStream.useCallback[sendMessage]\"],\n                    onFinishMessagePart: {\n                        \"useMessageStream.useCallback[sendMessage]\": async (finishedMessage)=>{\n                            console.log('🏁 Stream finished');\n                            setStreamingMessage({\n                                \"useMessageStream.useCallback[sendMessage]\": (prev)=>{\n                                    if (!prev) return null;\n                                    return {\n                                        ...prev,\n                                        isStreaming: false\n                                    };\n                                }\n                            }[\"useMessageStream.useCallback[sendMessage]\"]);\n                            setIsStreaming(false);\n                            // Call the completion callback if provided\n                            if (onComplete) {\n                                console.log('🔄 Calling completion callback...');\n                                onComplete();\n                            }\n                        }\n                    }[\"useMessageStream.useCallback[sendMessage]\"],\n                    onErrorPart: {\n                        \"useMessageStream.useCallback[sendMessage]\": (errorData)=>{\n                            console.error('Stream error:', errorData);\n                            setError('Failed to stream message');\n                            setIsStreaming(false);\n                        }\n                    }[\"useMessageStream.useCallback[sendMessage]\"]\n                });\n            } catch (err) {\n                console.error('Failed to send message:', err);\n                setError(err instanceof Error ? err.message : 'Failed to send message');\n                setIsStreaming(false);\n                setStreamingMessage(null);\n            }\n        }\n    }[\"useMessageStream.useCallback[sendMessage]\"], []);\n    return {\n        isStreaming,\n        streamingMessage,\n        error,\n        sendMessage,\n        clearStreamingMessage\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/useMessageStream.ts\n"));

/***/ })

});